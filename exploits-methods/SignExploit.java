package us.whitedev.exploits.impl;

import java.util.List;
import java.util.Locale;
import us.whitedev.commands.impl.ExploitCommand;
import us.whitedev.commands.impl.ExploitCommand.SignExploitMode;
import us.whitedev.exploits.Exploit;
import us.whitedev.utils.OptionType;
import us.whitedev.utils.OptionUtil;

public class SignExploit implements Exploit {
   private static final String EXPLOIT_NAME = "SignExploit";

   public void onExploit(String[] args) {
      String signMode = args[2];

      try {
         SignExploitMode mode = SignExploitMode.valueOf(signMode.toUpperCase(Locale.ROOT));
         if (ExploitCommand.SIGNMODE == mode || mode == SignExploitMode.DISABLED) {
            ExploitCommand.SIGNMODE = SignExploitMode.DISABLED;
            msgHelper.sendMessage("SignExploit has been &cDisabled&7!", true);
            return;
         }

         msgHelper.sendMessage(ExploitCommand.SIGNMODE == SignExploitMode.DISABLED ? "SignExploit has been &aEnabled (Place Sign)&7! &8[&f" + mode + "&8]" : "SignExploit Mode has been &eSwitched&7! &8[&f" + mode + "&8]", true);
         ExploitCommand.SIGNMODE = mode;
      } catch (IllegalArgumentException var4) {
         msgHelper.sendMessage("This SignExploit Mode &cdoesnt exist&7!", true);
         msgHelper.sendMessage("All Modes&8: &fLAG, CRASH, KICKALL, ERROR_EXECUTOR", true);
      }

   }

   public String getName() {
      return "SignExploit";
   }

   public List<OptionUtil> getOptions() {
      return List.of(new OptionUtil("Mode", OptionType.LIST, new String[]{"Lag", "Crash", "KickAll", "ErrorExecutor"}));
   }

   public String getArgsUsage() {
      return "mode[Crash]";
   }

   public String getDescription() {
      return "SignExploit for 1.8 / 1.8.9 Servers";
   }
}
